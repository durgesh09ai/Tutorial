you want to automatically stop all your Azure App Services on weekends (Saturday & Sunday) and then start them again on weekdays. This can save costs since the apps wonâ€™t be running during non-working days.

Hereâ€™s how you can do it:

âœ… Option 1: Using Azure Automation + Runbooks (Recommended)

Create an Automation Account in the Azure Portal.

Go to Automation Accounts â†’ Create a new one.

Add a Run As account (or Managed Identity) so it has permission to start/stop your App Services.

Create two Runbooks (PowerShell or Python):

Stop-AppServices.ps1 â†’ Stops all app services

Start-AppServices.ps1 â†’ Starts all app services

Example PowerShell script:

# Stop all App Services in a subscription
Connect-AzAccount -Identity   # (uses Managed Identity)

$apps = Get-AzWebApp
foreach ($app in $apps) {
    Stop-AzWebApp -ResourceGroupName $app.ResourceGroup -Name $app.Name
    Write-Output "Stopped: $($app.Name)"
}


Start script would use Start-AzWebApp instead.

Schedule the Runbooks:

Stop Runbook â†’ Schedule at Saturday 00:01 AM

Start Runbook â†’ Schedule at Monday 00:01 AM

âœ… Option 2: Using Azure Logic Apps / Functions

Create a Logic App that runs on a recurrence trigger (weekdays vs weekends).

Add an Azure App Service â€“ Stop/Start connector to control your apps.

Logic App is easier if you prefer a no-code solution.

âœ… Option 3: Azure DevOps Pipeline (if you already use it)

Create a scheduled pipeline with PowerShell tasks to stop/start app services.

But Automation Runbooks is simpler if you just need scheduling.

âš¡ Best Practice: Use tags on your App Services, e.g.,
autoSchedule=true
and then in your script, filter only those apps so you donâ€™t accidentally stop critical ones.


__________________________________________________________________________________________________

âœ… Step 1: Tag the App Services You Want to Control

Go to your App Service â†’ Tags in the Azure Portal.

Add a tag, for example:

Key: AutoSchedule

Value: true

Do this only on the apps you want to stop/start automatically.

âœ… Step 2: PowerShell Runbook (Azure Automation)

Hereâ€™s a ready-to-use script:

__________________________________________________

# Authenticate with Managed Identity inside Automation Account
Connect-AzAccount -Identity

# Get all App Services with tag AutoSchedule=true
$apps = Get-AzWebApp | Where-Object { $_.Tags["AutoSchedule"] -eq "true" }

foreach ($app in $apps) {
    # To stop use:
    Stop-AzWebApp -ResourceGroupName $app.ResourceGroup -Name $app.Name
    Write-Output "Stopped: $($app.Name)"

    # To start use:
    # Start-AzWebApp -ResourceGroupName $app.ResourceGroup -Name $app.Name
    # Write-Output "Started: $($app.Name)"
}

_________________________________________________________________

âœ… Step 3: Create 2 Runbooks

Stop-SelectedApps â†’ same script but using Stop-AzWebApp

Start-SelectedApps â†’ same script but using Start-AzWebApp

âœ… Step 4: Schedule

Schedule Stop-SelectedApps at Saturday 00:01 AM

Schedule Start-SelectedApps at Monday 00:01 AM

ðŸ”¹ This way, only the tagged App Services (AutoSchedule=true) will be controlled.
ðŸ”¹ Everything else stays running normally.



